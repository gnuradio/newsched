module: filter
block: pfb_channelizer
label: Multiply Constant
blocktype: block

grc:
  flags: [python]
  templates:
      imports: from newsched import filter
      make: filter.pfb_channelizer_${T.fcn}(${numchans},${taps},${oversample_rate})

typekeys:
  - id: T
    type: class
    options: 
      - value: gr_complex 
        suffix: cc 
    #   - value: float
    #     suffix: ff 

parameters:
-   id: numchans
    label: Number of Channels
    dtype: size_t
    settable: false
-   id: taps
    label: Filter Taps
    dtype: std::vector<float>
    settable: false
-   id: oversample_rate
    label: Oversample Rate
    dtype: float
    settable: false

ports:
-   domain: stream
    id: in
    direction: input
    type: typekeys/T

-   domain: stream
    id: out
    direction: output
    type: typekeys/T
    multiplicity: parameters/numchans

implementations:
-   id: cpu
-   id: cuda

file_format: 1
